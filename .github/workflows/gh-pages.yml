# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Pages
        if: ${{ !env.ACT }}
        uses: actions/configure-pages@v5

      - name: Setup Emscripten
        run: |
          git clone https://github.com/emscripten-core/emsdk.git
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
      
      - name: Setup CMake
        run: sudo apt update && sudo apt install -y cmake

      - name: Build
        run: |
          source ./emsdk/emsdk_env.sh
          mkdir wasm/build/
          cd wasm/build
          emcmake cmake ..
          emmake make
      
      - name: Save Commit Hash
        run: |
          echo $GITHUB_SHA > pages/COMMIT_SHA

      - name: Upload artifact
        if: ${{ !env.ACT }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        if: ${{ !env.ACT }}
        id: deployment
        uses: actions/deploy-pages@v4
